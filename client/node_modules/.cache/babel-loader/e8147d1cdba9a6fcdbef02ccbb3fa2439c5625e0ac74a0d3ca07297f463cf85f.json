{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\line\\\\Documents\\\\GitHub\\\\simpleBlogV2\\\\client\\\\src\\\\components\\\\user\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport firebase from \"../../firebase.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const navigate = useNavigate();\n  const LoginFunc = async e => {\n    e.preventDefault();\n    if (!(email && password)) {\n      return alert(\"모든 값을 채워주세요\");\n    }\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      alert(\"로그인 성공!\");\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n      if (err.code === \"\") {\n        if (err.code === \"auth/invalidid-email\") {\n          setErrorMsg(\"존재하지 않는 이메일입니다.\");\n        } else if (err.code === \"auth/invalidid-crednential\") {\n          setErrorMsg(\"비밀번호가 일치하지 않습니다.\");\n        } else {\n          setErrorMsg(\"로그인 실패하였습니다.\");\n        }\n      }\n    }\n  };\n  // const LoginFunc = async (e) => {\n  //     e.preventDefault();\n  //     if (!(email && password)) {\n  //         return alert(\"모든 값을 채워주세요!\");\n  //     }\n  //     try {\n  //         await firebase.auth().signInWithEmailAndPassword(email, password);\n  //         alert(\"로그인 성공하였습니다.\");\n  //         navigate(\"/\");\n  //     } catch (err) {\n  //         console.log(err.code);\n  //         if (err.code === \"auth/invalidid-email\") {\n  //             setErrorMsg(\"존재하지 않는 이메일입니다.\");\n  //         } else if (err.code === \"auth/invalidid-crednential\") {\n  //             setErrorMsg(\"비밀번호가 일치하지 않습니다.\");\n  //         } else {\n  //             setErrorMsg(\"로그인 실패하였습니다.\");\n  //         }\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_form btStyle bmStyle\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          name: \"#\",\n          method: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              className: \"blind\",\n              children: \"\\uB85C\\uADF8\\uC778 \\uC601\\uC5ED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"youEmail\",\n                className: \"required blind\",\n                children: \"E-mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"youEmail\",\n                name: \"youEmail\",\n                placeholder: \"E-mail\",\n                className: \"input_style\",\n                onChange: e => {\n                  setEmail(e.currentTarget.value);\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"youPass\",\n                className: \"required blind\",\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"youPass\",\n                name: \"youPass\",\n                placeholder: \"password\",\n                className: \"input_style\",\n                autocomplete: \"off\",\n                onChange: e => {\n                  setPassword(e.currentTarget.value);\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errorMsg !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: e => LoginFunc(e),\n              className: \"login__btn mt30\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"6Itx/69UiAfa6hgX+RbKnXqDmkI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","firebase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMsg","setErrorMsg","navigate","LoginFunc","e","preventDefault","alert","auth","signInWithEmailAndPassword","err","console","log","code","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","action","name","method","htmlFor","type","placeholder","onChange","currentTarget","value","required","autocomplete","onClick","_c","$RefreshReg$"],"sources":["C:/Users/line/Documents/GitHub/simpleBlogV2/client/src/components/user/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const LoginFunc = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!(email && password)) {\r\n            return alert(\"모든 값을 채워주세요\");\r\n        }\r\n        try {\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            alert(\"로그인 성공!\");\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.code === \"\") {\r\n                if (err.code === \"auth/invalidid-email\") {\r\n                    setErrorMsg(\"존재하지 않는 이메일입니다.\");\r\n                } else if (err.code === \"auth/invalidid-crednential\") {\r\n                    setErrorMsg(\"비밀번호가 일치하지 않습니다.\");\r\n                } else {\r\n                    setErrorMsg(\"로그인 실패하였습니다.\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // const LoginFunc = async (e) => {\r\n    //     e.preventDefault();\r\n    //     if (!(email && password)) {\r\n    //         return alert(\"모든 값을 채워주세요!\");\r\n    //     }\r\n    //     try {\r\n    //         await firebase.auth().signInWithEmailAndPassword(email, password);\r\n    //         alert(\"로그인 성공하였습니다.\");\r\n    //         navigate(\"/\");\r\n    //     } catch (err) {\r\n    //         console.log(err.code);\r\n    //         if (err.code === \"auth/invalidid-email\") {\r\n    //             setErrorMsg(\"존재하지 않는 이메일입니다.\");\r\n    //         } else if (err.code === \"auth/invalidid-crednential\") {\r\n    //             setErrorMsg(\"비밀번호가 일치하지 않습니다.\");\r\n    //         } else {\r\n    //             setErrorMsg(\"로그인 실패하였습니다.\");\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <section id=\"login\">\r\n            <div className=\"login__inner\">\r\n                <h2>Login</h2>\r\n                <div className=\"login_form btStyle bmStyle\">\r\n                    <form action=\"#\" name=\"#\" method=\"post\">\r\n                        <fieldset>\r\n                            <legend className=\"blind\">로그인 영역</legend>\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"youEmail\"\r\n                                    className=\"required blind\"\r\n                                >\r\n                                    E-mail\r\n                                </label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    id=\"youEmail\"\r\n                                    name=\"youEmail\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"input_style\"\r\n                                    onChange={(e) => {\r\n                                        setEmail(e.currentTarget.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"youPass\"\r\n                                    className=\"required blind\"\r\n                                >\r\n                                    password\r\n                                </label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"youPass\"\r\n                                    name=\"youPass\"\r\n                                    placeholder=\"password\"\r\n                                    className=\"input_style\"\r\n                                    autocomplete=\"off\"\r\n                                    onChange={(e) => {\r\n                                        setPassword(e.currentTarget.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>{errorMsg !== \"\" && <p>{errorMsg}</p>}</div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={(e) => LoginFunc(e)}\r\n                                className=\"login__btn mt30\"\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}