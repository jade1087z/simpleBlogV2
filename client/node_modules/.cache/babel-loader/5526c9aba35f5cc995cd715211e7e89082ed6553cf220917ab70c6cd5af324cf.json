{"ast":null,"code":"import React,{useState}from\"react\";import firebase from\"../../firebase.js\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[errorMsg,setErrorMsg]=useState(\"\");const navigate=useNavigate();const LoginFunc=async e=>{e.preventDefault();if(!(email&&password)){return alert(\"모든 값을 채워주세요!\");}try{await firebase.auth().signInWithEmailAndPassword(email,password);alert(\"로그인 성공하였습니다.\");navigate(\"/\");}catch(err){console.log(err.code);if(err.code===\"auth/invalidid-email\"){setErrorMsg(\"존재하지 않는 이메일입니다.\");}else if(err.code===\"auth/invalidid-crednential\"){setErrorMsg(\"비밀번호가 일치하지 않습니다.\");}else{setErrorMsg(\"로그인 실패하였습니다.\");}}};return/*#__PURE__*/_jsx(\"section\",{id:\"login\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login__inner\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login_form btStyle bmStyle\",children:/*#__PURE__*/_jsx(\"form\",{action:\"#\",name:\"#\",method:\"post\",children:/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{className:\"blind\",children:\"\\uB85C\\uADF8\\uC778 \\uC601\\uC5ED\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"youEmail\",className:\"required blind\",children:\"E-mail\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"youEmail\",name:\"youEmail\",placeholder:\"E-mail\",className:\"input_style\",onChange:e=>{setEmail(e.currentTarget.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"youPass\",className:\"required blind\",children:\"password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"youPass\",name:\"youPass\",placeholder:\"password\",className:\"input_style\",autocomplete:\"off\",onChange:e=>{setPassword(e.currentTarget.value);},required:true})]}),/*#__PURE__*/_jsx(\"div\",{children:errorMsg!==\"\"&&/*#__PURE__*/_jsx(\"p\",{children:errorMsg})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:e=>LoginFunc(e),className:\"login__btn mt30\",children:\"Login\"})]})})})]})});};export default Login;","map":{"version":3,"names":["React","useState","firebase","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","errorMsg","setErrorMsg","navigate","LoginFunc","e","preventDefault","alert","auth","signInWithEmailAndPassword","err","console","log","code","id","children","className","action","name","method","htmlFor","type","placeholder","onChange","currentTarget","value","required","autocomplete","onClick"],"sources":["C:/Users/line/Documents/GitHub/simpleBlogV2/client/src/components/user/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const LoginFunc = async (e) => {\r\n        e.preventDefault();\r\n        if (!(email && password)) {\r\n            return alert(\"모든 값을 채워주세요!\");\r\n        }\r\n        try {\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            alert(\"로그인 성공하였습니다.\");\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.log(err.code);\r\n            if (err.code === \"auth/invalidid-email\") {\r\n                setErrorMsg(\"존재하지 않는 이메일입니다.\");\r\n            } else if (err.code === \"auth/invalidid-crednential\") {\r\n                setErrorMsg(\"비밀번호가 일치하지 않습니다.\");\r\n            } else {\r\n                setErrorMsg(\"로그인 실패하였습니다.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section id=\"login\">\r\n            <div className=\"login__inner\">\r\n                <h2>Login</h2>\r\n                <div className=\"login_form btStyle bmStyle\">\r\n                    <form action=\"#\" name=\"#\" method=\"post\">\r\n                        <fieldset>\r\n                            <legend className=\"blind\">로그인 영역</legend>\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"youEmail\"\r\n                                    className=\"required blind\"\r\n                                >\r\n                                    E-mail\r\n                                </label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    id=\"youEmail\"\r\n                                    name=\"youEmail\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"input_style\"\r\n                                    onChange={(e) => {\r\n                                        setEmail(e.currentTarget.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label\r\n                                    htmlFor=\"youPass\"\r\n                                    className=\"required blind\"\r\n                                >\r\n                                    password\r\n                                </label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"youPass\"\r\n                                    name=\"youPass\"\r\n                                    placeholder=\"password\"\r\n                                    className=\"input_style\"\r\n                                    autocomplete=\"off\"\r\n                                    onChange={(e) => {\r\n                                        setPassword(e.currentTarget.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>{errorMsg !== \"\" && <p>{errorMsg}</p>}</div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={(e) => LoginFunc(e)}\r\n                                className=\"login__btn mt30\"\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}